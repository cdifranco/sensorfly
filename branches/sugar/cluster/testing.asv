fid = fopen('result.txt','w');
%random to random
fprintf('-----random to random testing-----\n');
l = 0;
error = 0;
testing_round = 2;
for j = 1:testing_round
    startX = 1+2*rand;
    startY = 4+5*rand;
    destX = 1+2*rand;
    destY = 4+5*rand;
    [succ sigRoute clusterRoute coordRoute startClus destClus] = Navigate([startX, startY], [destX, destY], step_len, b, base_number, trans_history, trans_init_number, center);
    fprintf('the %d th case: from %d to %d-----takes %d steps\n',j , startClus, destClus, length(clusterRoute));
    if succ == 1
        l = l + length(clusterRoute);
    end
    draw_path;
    line([coordRoute(end, 1) destX], [coordRoute(end, 2) destY], 'Color','r');
    error = error + (sum(coordRouted(end)-[destX destY]).^2)
end
error_rate = error / testing_round;
fprintf('error rate is %d \n',error_rate);
% one to one
%{
fprintf('-----one to one testing-----\n');
l = 0;
error = 0;
testing_round = 1000;
fixX = 3.5;
fixY = 5.7;
destClus = size(center,1)-1;
for j = 1:testing_round
%    percentage = j
    [succ sigRoute clusterRoute coordRoute] = Navigate([fixX, fixY], destClus, step_len, b, base_number, trans_history, trans_init_number, center);
    if succ == 1
        l = l + length(clusterRoute);
    else 
        error = error + 1;
    end
    
end
step_ave = l/testing_round;
fprintf('average step is %d \n',step_ave);
%}
fclose(fid);
